package com.jcodee.demobackground.easy;
//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.6.0.0
//
// Created by Quasar Development 
//
//---------------------------------------------------



import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class PIIMenu extends PIIEntidadBase implements KvmSerializable
{
    
    public String Controlador;
    
    public Boolean EsFavorito;
    
    public String Nombre;
    
    public PIIArrayOfMenu SubMenus;
        

    
    
    @Override
    public void loadFromSoap(Object paramObj, PIIExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        super.loadFromSoap(paramObj, __envelope);



    }

    @Override
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,PIIExtendedSoapSerializationEnvelope __envelope)
    {
        Object obj = info.getValue();
        if (info.name.equals("Controlador"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Controlador = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Controlador = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("EsFavorito"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.EsFavorito = new Boolean(j.toString());
                    }
                }
                else if (obj instanceof Boolean){
                    this.EsFavorito = (Boolean)obj;
                }
            }
            return true;
        }
        if (info.name.equals("Nombre"))
        {
            if(obj!=null)
            {
                if (obj.getClass().equals(SoapPrimitive.class))
                {
                    SoapPrimitive j =(SoapPrimitive) obj;
                    if(j.toString()!=null)
                    {
                        this.Nombre = j.toString();
                    }
                }
                else if (obj instanceof String){
                    this.Nombre = (String)obj;
                }
            }
            return true;
        }
        if (info.name.equals("SubMenus"))
        {
            if(obj!=null)
            {
                Object j = obj;
                this.SubMenus = (PIIArrayOfMenu)__envelope.get(j,PIIArrayOfMenu.class,false);
            }
            return true;
        }
        return super.loadProperty(info,soapObject,__envelope);
    }
    
    

    @Override
    public Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.Controlador!=null?this.Controlador:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.EsFavorito!=null?this.EsFavorito:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.Nombre!=null?this.Nombre:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.SubMenus!=null?this.SubMenus:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+4;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Controlador";
            info.namespace= "http://schemas.datacontract.org/2004/07/CunaMas.Component.Entities.Seguridad";
        }
        if(propertyIndex==count+1)
        {
            info.type = PropertyInfo.BOOLEAN_CLASS;
            info.name = "EsFavorito";
            info.namespace= "http://schemas.datacontract.org/2004/07/CunaMas.Component.Entities.Seguridad";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.STRING_CLASS;
            info.name = "Nombre";
            info.namespace= "http://schemas.datacontract.org/2004/07/CunaMas.Component.Entities.Seguridad";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "SubMenus";
            info.namespace= "http://schemas.datacontract.org/2004/07/CunaMas.Component.Entities.Seguridad";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }

    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

    
}
